#! /usr/bin/env python
# coding=UTF-8

from __future__ import print_function

import sys
import zipfile


class Processor:
    def __init__(self):
        pass

    @staticmethod
    def _is_file_need_be_ignored(name=''):
        # if '.class' in name: # ignore the class file
        #     return True
        if '/' == name[len(name)-1:]: # ignore the directory
            return True
        return False

    @staticmethod
    def _is_file_name_matched(content, pattern):
        if pattern is None:
            return True
        if pattern in content:
            return True
        return False

    @staticmethod
    def _deal_with_zip_file(path, pattern):
        f = zipfile.ZipFile(path)
        for member in f.namelist():
            if Processor._is_file_need_be_ignored(member):
                continue

            if Processor._is_file_name_matched(member, pattern):
                print('[' + member + ']')
                member_file = f.open(member, 'r')
                for line in member_file.readlines():
                    print(line)

    @staticmethod
    def process(path, pattern):
        if zipfile.is_zipfile(path):
            Processor._deal_with_zip_file(path, pattern)


def main(argv):
    path = argv[1]
    
    pattern = argv[2] if len(argv) > 2 else None

    Processor.process(path, pattern)


sys.exit(main(sys.argv))
